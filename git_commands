Local repository:
-----------------

working directory ----- stage area ----- .git folder

git add. -------------> git commit ---->
  <------------------------------------- git checkout

file: modified -------> file: staged---> file: committed

git clean <file> - remove changes in the working directory (-n is a dry run, -d to include directories, -i for interactive mode, -f to force)
git reset <file> - remove a file from stage back to the working directory
git checkout <file> - revert a change to an indexed file; git restores the file to a working dir from the local repository (last
commited version); the file must exist in the git repository
git rm <file> - delete a file from the local repository

moving to previous version (moving the HEAD pointer):

1. git log --oneline
2. copy the hash of the commit
3. git checkout <commit_hash>
4. return to master: git checkout master

git revert - reverting the given commit as a new commit, does not change history as it is yet another commit
git reset --mixed/soft/hard - going back in time, modifies the history

tomasz@HP-250 ~/git/nowy $ git log --oneline
6ff4144 Revert "ggggg"
b324150 ggggg
80f4956 adding new index.html
b78d89c adding gitignore file
tomasz@HP-250 ~/git/nowy $ git reset --hard b324150
HEAD is now at b324150 ggggg
tomasz@HP-250 ~/git/nowy $ git log --oneline
b324150 ggggg
80f4956 adding new index.html
b78d89c adding gitignore file

Browsing history:
-----------------

git log --oneline - compacted version of log, one commit per line
git log --onelien -n (last n commits)
git log --author="<user>"
git log -- /path/to/resource - hisotry of a given file/directory
git log --grep="phrase"
git log --patch -- path/to/resource - see what has actually been changed
other flags:
--summary
--stat
--format="placeholder" --> https://git-scm.com/docs/pretty-formats

git log --graph --decorate --all --oneline

git shortlog - shows commits by user

Stashing files:
--------------

git stash - changes in the working directory are stashed aside and the working direcotry is clear again (useful when accidentaly changes are made in the master branch)
git checkout <branch>
git stash pop - resotre the stashed changes
git stash clear - clears the whole stash
git stash brach <branch> - create a new branch with the changes currently in stash

Remote repository:
------------------

origin - alias of the main remote repo
connect the local repo to a remote repo:

git remote add origin https://github.com/tomaszpapirzwierz/testing.git

git fetch - grab the list of commits fro mthe remote repo
git merge origin/master - merge local master with the origin/master

SEems like the above two are equilent of simply doing git pull


